const { EmbedBuilder } = require("discord.js");
require("dotenv/config");

/** @type {import('commandkit').CommandData} */
const data = {
    name: "weather",
    description: "‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏®",
    options: [
        {
            name: "province",
            type: 3, 
            description: "‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î",
            required: true,
        },
        {
            name: "amphoe",
            type: 3, 
            description: "‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏≥‡πÄ‡∏†‡∏≠",
            required: true,
        },
    ],
};

/** @param {import('commandkit').SlashCommandProps} param0 */
async function run({ interaction }) {

    // ‡∏ô‡∏≥‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å province ‡πÅ‡∏•‡∏∞ province
    const province = interaction.options.getString("province");
    const amphoe = interaction.options.getString("amphoe");
    
    // Fetch ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å data
    const data = await fetchWeather(province, amphoe);
    
    if (data) {
        const location = data.location;
        const forecasts = data.forecasts;

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á Embed ‡πÉ‡∏´‡πâ‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°‡∏à‡∏±‡∏î‡∏ï‡∏≤‡∏°‡∏£‡∏∏‡∏õ‡πÅ‡∏ö‡∏ö Data
        const weatherEmbed = new EmbedBuilder()
            .setTitle(`üå§Ô∏è ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡∏à‡∏≤‡∏Å ${location.amphoe}, ${location.province}`)
            .setColor("Blue")
            .addFields(
                forecasts.map(forecast => ({
                    name: `üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: ${new Date(forecast.time).toLocaleDateString()}`,
                    value: `üå°Ô∏è ‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥: ${forecast.data.tc_max} ¬∞C\nüíß ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏∑‡πâ‡∏ô‡πÉ‡∏ô‡∏≠‡∏≤‡∏Å‡∏≤‡∏®: ${forecast.data.rh}%`,
                    inline: true
                }))
            );

        // ‡∏™‡πà‡∏á Embed ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
        await interaction.reply({ embeds: [weatherEmbed] });
    } else {

        // ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        await interaction.reply("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ‡∏´‡∏£‡∏∑‡∏≠‡∏°‡∏µ‡∏ö‡∏≤‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î");
    }
}

/** @type {import('commandkit').CommandOptions} */
const options = {
    // devOnly: true,
};

module.exports = { data, run, options };

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡πà‡∏ô‡πÉ‡∏ô‡∏Å‡∏≤‡∏£ fetch ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•data
async function fetchWeather(province, amphoe) {
    const url = `https://data.tmd.go.th/nwpapi/v1/forecast/location/daily/place?province=${encodeURIComponent(province)}&amphoe=${encodeURIComponent(amphoe)}&fields=tc_max,rh&duration=2`;
    
    try {
        const response = await fetch(url, {
            method: "GET",
            headers: {
                "accept": "application/json",
                "authorization": `Bearer ${process.env.TMD_API_TOKEN}`,
            },
        });

        const json = await response.json();

        // ‡∏´‡∏≤‡∏Å‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Json ‡∏Ç‡∏≠‡∏á "WeatherForecasts" ‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡πâ‡∏ô‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤
        if (json.WeatherForecasts && json.WeatherForecasts.length > 0) {
            return await json.WeatherForecasts[0]; // Return ‡∏´‡∏≤‡∏Å‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        } else {
            console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•", json);
            return null;
        }
    } catch (error) {
        console.error("Fetch error:", error);
        return null;
    }
}

