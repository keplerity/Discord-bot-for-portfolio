const { EmbedBuilder } = require("discord.js");
require("dotenv/config");

/** @type {import('commandkit').CommandData} */
const data = {
    name: "airquality",
    description: "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ",
    options: [
        {
            name: "city",
            type: 3, 
            description: "‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£",
            required: true,
        },
    ],
};

/** @param {import('commandkit').SlashCommandProps} param0 */
async function run({ interaction, client }) {
    // ‡πÄ‡∏Å‡πá‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    const cityName = interaction.options.getString("city");

    // ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ API ‡∏Ç‡∏≠‡∏á OpenAQ ‡πÅ‡∏•‡∏∞ fetch
    const data = await fetchAirQuality(cityName);

    // ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    if (data) {

        const { aqi, city, dominentpol, iaqi, time } = data;

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏°‡∏•‡∏û‡∏¥‡∏©‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î
        const mainPollutant = dominentpol.toUpperCase();

        // ‡∏´‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏°‡∏∑‡∏≠‡∏á
        const cityInfo = city.name;

        // ‡πÄ‡∏ß‡∏•‡∏≤
        const timestamp = time.iso;

        // Embed ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô
        const generalInfoEmbed = new EmbedBuilder()
            .setDescription(`### üåø ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡∏Ç‡∏≠‡∏á **${cityInfo}**\n> \`\`üîé\`\` **‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤:** ${cityInfo}\n> \`\`üî∞\`\` **‡∏î‡∏±‡∏ä‡∏ô‡∏µ‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏® (AQI):** ${aqi}\n> \`\`üö¨\`\` **‡∏™‡∏≤‡∏£‡∏°‡∏•‡∏û‡∏¥‡∏©‡∏´‡∏•‡∏±‡∏Å:** ${mainPollutant}\n> \`\`‚åõ\`\` **‡πÄ‡∏ß‡∏•‡∏≤:** ${timestamp}`)
            .setColor('Aqua');

        // Embed ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥
        const pollutantInfoEmbed = new EmbedBuilder()
            .addFields(
                { name: "üçÇ ‡∏ù‡∏∏‡πà‡∏ô PM 2.5", value: iaqi.pm25?.v ? `\`\`${iaqi.pm25.v}\`\`` : "N/A", inline: true },
                { name: "üåµ ‡∏ù‡∏∏‡πà‡∏ô PM 10", value: iaqi.pm10?.v ? `\`\`${iaqi.pm10.v}\`\`` : "N/A", inline: true },
                { name: "üíß ‡πÇ‡∏≠‡πÇ‡∏ã‡∏ô (O3)", value: iaqi.o3?.v ? `\`\`${iaqi.o3.v}\`\`` : "N/A", inline: true },
                { name: "üçá ‡πÅ‡∏Å‡πä‡∏™ Nitrogen Dioxide (NO2)", value: iaqi.no2?.v ? `${iaqi.no2.v}` : "N/A", inline: true },
                { name: "‚õÖ ‡∏à‡∏∏‡∏î‡∏ô‡πâ‡∏≥‡∏Ñ‡πâ‡∏≤‡∏á", value: iaqi.dew?.v ? `\`\`${iaqi.dew.v}¬∞C\`\`` : "N/A", inline: true },
                { name: "üí® ‡∏ã‡∏±‡∏•‡πÄ‡∏ü‡∏≠‡∏£‡πå‡πÑ‡∏î‡∏≠‡∏≠‡∏Å‡πÑ‡∏ã‡∏î‡πå (SO2)", value: iaqi.so2?.v ? `${iaqi.so2.v}` : "N/A", inline: true },
                { name: "üî∫ ‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥", value: iaqi.t?.v ? `\`\`${iaqi.t.v} ¬∞C\`\`` : "N/A", inline: true },
                { name: "üçÉ ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏•‡∏°", value: iaqi.w?.v ? `\`\`${iaqi.w.v} m/s\`\`` : "N/A", inline: true }
            ).setColor('Aqua');

        // ‡∏™‡πà‡∏á Embed ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
        await interaction.reply({ embeds: [generalInfoEmbed, pollutantInfoEmbed] });
    } else {

        // ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô Data
        await interaction.reply("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ‡∏´‡∏£‡∏∑‡∏≠‡∏°‡∏µ‡∏ö‡∏≤‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î");
    }
}

/** @type {import('commandkit').CommandOptions} */
const options = {
    // devOnly: true,
};

module.exports = { data, run, options };

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡πà‡∏ô‡πÉ‡∏ô‡∏Å‡∏≤‡∏£ fetch ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•data
async function fetchAirQuality(cityName) {

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á URl ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡πà‡∏≠ API
    const url = `https://api.waqi.info/feed/${encodeURIComponent(cityName)}/?token=${process.env.WAQI_API_TOKEN}`;
    try {

        // Fetch ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å API
        const response = await fetch(url);

        // ‡πÅ‡∏õ‡∏•‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å JSON
        const json = await response.json();

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏´‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤‡∏ô‡∏±‡πâ‡∏ô OK
        if (json.status === "ok") {
            return json.data;
        } else {
            // ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏ö‡∏≤‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏ø‡∏•‡πÑ‡∏î‡πâ
            console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•", json);
            return null;
        }
    } catch (error) {
        console.error("Fetch error:", error);
        return null;
    }
}
